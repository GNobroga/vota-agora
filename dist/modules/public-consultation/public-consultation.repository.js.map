{"version":3,"sources":["../../../src/modules/public-consultation/public-consultation.repository.ts"],"sourcesContent":["import Paginator from \"src/core/models/Paginator\";\r\nimport { IPublicConsultationRepository } from \"./interfaces/public-consultation-repository.interface\";\r\nimport PublicConsultation from \"./public-consultation.schema\";\r\nimport { Injectable } from \"@nestjs/common\";\r\nimport { Model } from \"mongoose\";\r\nimport { InjectModel } from \"@nestjs/mongoose\";\r\n\r\n\r\n@Injectable()\r\nexport default class PublicConsultationRepository implements IPublicConsultationRepository {\r\n    \r\n    constructor(\r\n        @InjectModel(PublicConsultation.name)\r\n        private readonly _model: Model<PublicConsultation>\r\n    ) {}\r\n    \r\n    async save(record: PublicConsultation): Promise<boolean> {\r\n        try {\r\n            if (record['_id']) {\r\n                const id = record['_id'] as string;\r\n                await this._model.findByIdAndUpdate(id, record ,{  new: true }).exec();\r\n                return true;\r\n           } else {\r\n                await this._model.create(record);\r\n                return true;\r\n           }\r\n        } catch {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    async findById(identifier: string): Promise<PublicConsultation> {\r\n        try {\r\n            const data = await this._model.findById(identifier).exec();\r\n            return data.toObject();\r\n        } catch {\r\n            return null;\r\n        }\r\n    }\r\n\r\n\r\n    async deleteById(identifier: string): Promise<boolean> {\r\n       try {\r\n            this.findById(identifier);\r\n            await this._model.findByIdAndDelete(identifier).exec();\r\n            return true;\r\n       } catch {\r\n            return false;\r\n       }\r\n    }\r\n\r\n    async findAll(paginator: Paginator): Promise<PublicConsultation[]> {\r\n        const skip = (paginator.page - 1) * paginator.size; \r\n        const data = await this._model.find()\r\n            .sort({ '_id': paginator.sort === 'desc' ? -1 : 1 })\r\n            .skip(skip)\r\n            .limit(paginator.size)\r\n            .populate('owner');\r\n        return data.map(doc => doc.toObject());\r\n    }\r\n    \r\n}"],"names":["PublicConsultationRepository","save","record","id","_model","findByIdAndUpdate","new","exec","create","findById","identifier","data","toObject","deleteById","findByIdAndDelete","findAll","paginator","skip","page","size","find","sort","limit","populate","map","doc","constructor","name"],"mappings":";;;;;;;eASqBA;;;iFAPU;wBACJ;0BACL;2BACM;;;;;;;;;;;;;;;;;;;;AAIb,IAAA,AAAMA,+BAAN,MAAMA;IAOjB,MAAMC,KAAKC,MAA0B,EAAoB;QACrD,IAAI;YACA,IAAIA,MAAM,CAAC,MAAM,EAAE;gBACf,MAAMC,KAAKD,MAAM,CAAC,MAAM;gBACxB,MAAM,IAAI,CAACE,MAAM,CAACC,iBAAiB,CAACF,IAAID,QAAQ;oBAAGI,KAAK;gBAAK,GAAGC,IAAI;gBACpE,OAAO;YACZ,OAAO;gBACF,MAAM,IAAI,CAACH,MAAM,CAACI,MAAM,CAACN;gBACzB,OAAO;YACZ;QACH,EAAE,OAAM;YACJ,OAAO;QACX;IACJ;IAEA,MAAMO,SAASC,UAAkB,EAA+B;QAC5D,IAAI;YACA,MAAMC,OAAO,MAAM,IAAI,CAACP,MAAM,CAACK,QAAQ,CAACC,YAAYH,IAAI;YACxD,OAAOI,KAAKC,QAAQ;QACxB,EAAE,OAAM;YACJ,OAAO;QACX;IACJ;IAGA,MAAMC,WAAWH,UAAkB,EAAoB;QACpD,IAAI;YACC,IAAI,CAACD,QAAQ,CAACC;YACd,MAAM,IAAI,CAACN,MAAM,CAACU,iBAAiB,CAACJ,YAAYH,IAAI;YACpD,OAAO;QACZ,EAAE,OAAM;YACH,OAAO;QACZ;IACH;IAEA,MAAMQ,QAAQC,SAAoB,EAAiC;QAC/D,MAAMC,OAAO,AAACD,CAAAA,UAAUE,IAAI,GAAG,CAAA,IAAKF,UAAUG,IAAI;QAClD,MAAMR,OAAO,MAAM,IAAI,CAACP,MAAM,CAACgB,IAAI,GAC9BC,IAAI,CAAC;YAAE,OAAOL,UAAUK,IAAI,KAAK,SAAS,CAAC,IAAI;QAAE,GACjDJ,IAAI,CAACA,MACLK,KAAK,CAACN,UAAUG,IAAI,EACpBI,QAAQ,CAAC;QACd,OAAOZ,KAAKa,GAAG,CAACC,CAAAA,MAAOA,IAAIb,QAAQ;IACvC;IAhDAc,YACI,AACiBtB,MAAiC,CACpD;aADmBA,SAAAA;IAClB;AA+CP;;;+EAjDwCuB"}