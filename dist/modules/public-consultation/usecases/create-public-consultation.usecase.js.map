{"version":3,"sources":["../../../../src/modules/public-consultation/usecases/create-public-consultation.usecase.ts"],"sourcesContent":["import { BadRequestException, Inject, Injectable } from \"@nestjs/common\";\r\nimport moment from \"moment\";\r\nimport IUnaryUseCase from \"src/core/usecases/unary.usecase\";\r\nimport { IPublicConsultationRepository, PUBLIC_CONSULTATION_REPOSITORY_TOKEN } from \"../interfaces/public-consultation-repository.interface\";\r\nimport PublicConsultation from \"../schemas/public-consultation.schema\";\r\nimport { CreatePublicConsultationInput } from \"./inputs/create-public-consultation.input\";\r\nimport { IUserRepository, USER_REPOSITORY_TOKEN } from \"src/modules/users/interfaces/user-repository.interface\";\r\nimport { Types } from \"mongoose\";\r\n\r\n@Injectable()\r\nexport default class CreatePublicConsultationUseCase implements IUnaryUseCase<CreatePublicConsultationInput> {\r\n    \r\n    constructor(\r\n        @Inject(PUBLIC_CONSULTATION_REPOSITORY_TOKEN)\r\n        private readonly _publicConsultationRepository: IPublicConsultationRepository,\r\n        @Inject(USER_REPOSITORY_TOKEN)\r\n        private readonly _userRepository: IUserRepository\r\n    ) {}\r\n    \r\n    async execute(input: CreatePublicConsultationInput) {\r\n\r\n        const user = await this._userRepository.findByDocument(input.userDocument);\r\n\r\n        if (!user) {\r\n            throw new BadRequestException(`Usuário com identificação ${input.userDocument} não encontrado.`);\r\n        }\r\n\r\n        const today = moment().startOf('day');\r\n        const initialDate = moment(input.initialDate).startOf('day');\r\n        const endDate = moment(input.endDate).startOf('day');\r\n\r\n        if (initialDate.isBefore(today)) {\r\n            throw new BadRequestException('A data inicial não pode ser inferior à data atual.');\r\n        }\r\n\r\n        if (initialDate.isAfter(endDate)) {\r\n            throw new BadRequestException('A data inicial não pode ser superior à data final.');\r\n        }\r\n        console.log(user['_id']);\r\n        await this._publicConsultationRepository.save(PublicConsultation.create(\r\n            new Types.ObjectId(user['_id'] as string),\r\n            input.title,\r\n            input.description,\r\n            input.initialDate,\r\n            input.endDate,\r\n        ));\r\n    }\r\n\r\n\r\n}"],"names":["CreatePublicConsultationUseCase","execute","input","user","_userRepository","findByDocument","userDocument","BadRequestException","today","moment","startOf","initialDate","endDate","isBefore","isAfter","console","log","_publicConsultationRepository","save","PublicConsultation","create","Types","ObjectId","title","description","constructor"],"mappings":";;;;;;;eAUqBA;;;wBAVmC;+DACrC;uDAEiE;iFACrD;yCAEwB;0BACjC;;;;;;;;;;;;;;;;;;;;AAGP,IAAA,AAAMA,kCAAN,MAAMA;IASjB,MAAMC,QAAQC,KAAoC,EAAE;QAEhD,MAAMC,OAAO,MAAM,IAAI,CAACC,eAAe,CAACC,cAAc,CAACH,MAAMI,YAAY;QAEzE,IAAI,CAACH,MAAM;YACP,MAAM,IAAII,2BAAmB,CAAC,CAAC,0BAA0B,EAAEL,MAAMI,YAAY,CAAC,gBAAgB,CAAC;QACnG;QAEA,MAAME,QAAQC,IAAAA,eAAM,IAAGC,OAAO,CAAC;QAC/B,MAAMC,cAAcF,IAAAA,eAAM,EAACP,MAAMS,WAAW,EAAED,OAAO,CAAC;QACtD,MAAME,UAAUH,IAAAA,eAAM,EAACP,MAAMU,OAAO,EAAEF,OAAO,CAAC;QAE9C,IAAIC,YAAYE,QAAQ,CAACL,QAAQ;YAC7B,MAAM,IAAID,2BAAmB,CAAC;QAClC;QAEA,IAAII,YAAYG,OAAO,CAACF,UAAU;YAC9B,MAAM,IAAIL,2BAAmB,CAAC;QAClC;QACAQ,QAAQC,GAAG,CAACb,IAAI,CAAC,MAAM;QACvB,MAAM,IAAI,CAACc,6BAA6B,CAACC,IAAI,CAACC,iCAAkB,CAACC,MAAM,CACnE,IAAIC,eAAK,CAACC,QAAQ,CAACnB,IAAI,CAAC,MAAM,GAC9BD,MAAMqB,KAAK,EACXrB,MAAMsB,WAAW,EACjBtB,MAAMS,WAAW,EACjBT,MAAMU,OAAO;IAErB;IAlCAa,YACI,AACiBR,6BAA4D,EAC7E,AACiBb,eAAgC,CACnD;aAHmBa,gCAAAA;aAEAb,kBAAAA;IAClB;AAgCP"}