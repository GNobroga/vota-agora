{"version":3,"sources":["../../../../src/modules/public-consultation/usecases/update-public-consultation.usecase.ts"],"sourcesContent":["import { Inject, NotFoundException } from \"@nestjs/common\";\r\nimport IUnaryUseCase from \"src/core/usecases/unary.usecase\";\r\nimport { IPublicConsultationRepository, PUBLIC_CONSULTATION_REPOSITORY_TOKEN } from \"../interfaces/public-consultation-repository.interface\";\r\nimport UpdatePublicConsultationRequestDTO from \"../dtos/request/update-public-consultation-request.dto\";\r\n\r\nexport default class UpdatePublicConsultationUseCase implements IUnaryUseCase<UpdatePublicConsultationRequestDTO> {\r\n    \r\n    constructor(\r\n        @Inject(PUBLIC_CONSULTATION_REPOSITORY_TOKEN)\r\n        private readonly _publicConsultationRepository: IPublicConsultationRepository\r\n    ) {}\r\n    \r\n    async execute(input: UpdatePublicConsultationRequestDTO) {\r\n\r\n        const data = await this._publicConsultationRepository.findById(input.id);\r\n\r\n        if (!data) {\r\n            throw new NotFoundException(`Não há nenhuma consulta pública com a identificação ${input.id}`);\r\n        }\r\n\r\n        data.title = input.title;\r\n        data.description = input.description;\r\n        data.imageUrl ||= data.imageUrl; \r\n      \r\n        await this._publicConsultationRepository.save(data);\r\n    }\r\n}"],"names":["UpdatePublicConsultationUseCase","execute","input","data","_publicConsultationRepository","findById","id","NotFoundException","title","description","imageUrl","save","constructor"],"mappings":";;;;;;;eAKqBA;;;wBALqB;uDAE0C;;;;;;;;;;;;;;;AAGrE,IAAA,AAAMA,kCAAN,MAAMA;IAOjB,MAAMC,QAAQC,KAAyC,EAAE;QAErD,MAAMC,OAAO,MAAM,IAAI,CAACC,6BAA6B,CAACC,QAAQ,CAACH,MAAMI,EAAE;QAEvE,IAAI,CAACH,MAAM;YACP,MAAM,IAAII,yBAAiB,CAAC,CAAC,oDAAoD,EAAEL,MAAMI,EAAE,CAAC,CAAC;QACjG;QAEAH,KAAKK,KAAK,GAAGN,MAAMM,KAAK;QACxBL,KAAKM,WAAW,GAAGP,MAAMO,WAAW;QACpCN,KAAKO,QAAQ,KAAKP,KAAKO,QAAQ;QAE/B,MAAM,IAAI,CAACN,6BAA6B,CAACO,IAAI,CAACR;IAClD;IAlBAS,YACI,AACiBR,6BAA4D,CAC/E;aADmBA,gCAAAA;IAClB;AAgBP"}