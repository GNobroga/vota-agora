{"version":3,"sources":["../../../../../src/modules/users/v1/usecases/find-all-users.usecase.ts"],"sourcesContent":["import { Inject, Injectable } from \"@nestjs/common\";\r\nimport Paginator from \"src/core/models/Paginator\";\r\nimport IDefaultUseCase from \"src/core/usecases/default.usecase\";\r\nimport UserResponseDTO from \"../dtos/response/user-response.dto\";\r\nimport { IUserRepository, USER_REPOSITORY_TOKEN } from \"../user.repository\";\r\nimport { BLOCKCHAIN_SERVICE_TOKEN, IBlockchainTokenService } from \"src/modules/admin/v1/services/blockchain-token.service\";\r\n\r\n@Injectable()\r\nexport default class FindAllUsersUseCase implements IDefaultUseCase<Paginator, UserResponseDTO[]> {\r\n    \r\n    constructor(\r\n        @Inject(USER_REPOSITORY_TOKEN)\r\n        private readonly _userRepository: IUserRepository,\r\n        @Inject(BLOCKCHAIN_SERVICE_TOKEN)\r\n        private readonly _blockchainService: IBlockchainTokenService\r\n    ) {}\r\n    \r\n    async execute(input: Paginator): Promise<UserResponseDTO[]> {\r\n        const users = await this._userRepository.findAll(input);\r\n        const response = [] as UserResponseDTO[];\r\n\r\n        for (const { accountAddress, fullName, document, ...userRest} of users) {\r\n            const balance = await this._blockchainService.findBalanceByAccountAddress(accountAddress);\r\n            const userResponseDTO = new UserResponseDTO({\r\n                balance,\r\n                id: userRest['_id'],\r\n                accountAddress,\r\n                fullName,\r\n                document,\r\n            });\r\n            response.push(userResponseDTO);\r\n        }\r\n        \r\n        return response;\r\n    }\r\n\r\n}"],"names":["FindAllUsersUseCase","execute","input","users","_userRepository","findAll","response","accountAddress","fullName","document","userRest","balance","_blockchainService","findBalanceByAccountAddress","userResponseDTO","UserResponseDTO","id","push","constructor"],"mappings":";;;;;;;eAQqBA;;;wBARc;wEAGP;gCAC2B;wCACW;;;;;;;;;;;;;;;;;;;;AAGnD,IAAA,AAAMA,sBAAN,MAAMA;IASjB,MAAMC,QAAQC,KAAgB,EAA8B;QACxD,MAAMC,QAAQ,MAAM,IAAI,CAACC,eAAe,CAACC,OAAO,CAACH;QACjD,MAAMI,WAAW,EAAE;QAEnB,KAAK,MAAM,EAAEC,cAAc,EAAEC,QAAQ,EAAEC,QAAQ,EAAE,GAAGC,UAAS,IAAIP,MAAO;YACpE,MAAMQ,UAAU,MAAM,IAAI,CAACC,kBAAkB,CAACC,2BAA2B,CAACN;YAC1E,MAAMO,kBAAkB,IAAIC,wBAAe,CAAC;gBACxCJ;gBACAK,IAAIN,QAAQ,CAAC,MAAM;gBACnBH;gBACAC;gBACAC;YACJ;YACAH,SAASW,IAAI,CAACH;QAClB;QAEA,OAAOR;IACX;IAxBAY,YACI,AACiBd,eAAgC,EACjD,AACiBQ,kBAA2C,CAC9D;aAHmBR,kBAAAA;aAEAQ,qBAAAA;IAClB;AAqBP"}