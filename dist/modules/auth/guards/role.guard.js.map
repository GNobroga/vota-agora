{"version":3,"sources":["../../../../src/modules/auth/guards/role.guard.ts"],"sourcesContent":["import { CanActivate, ExecutionContext, Injectable } from \"@nestjs/common\";\r\nimport { Reflector } from \"@nestjs/core\";\r\nimport { Observable } from \"rxjs\";\r\nimport { ALLOW_ROLES_KEY } from \"../decorators/allow-roles.decorator\";\r\n\r\n@Injectable()\r\nexport default class RoleGuard implements CanActivate {\r\n\r\n    constructor(private readonly reflector: Reflector) {}\r\n\r\n    canActivate(context: ExecutionContext): boolean | Promise<boolean> | Observable<boolean> {\r\n        const request = context.switchToHttp().getRequest<Request>();\r\n        const claimRoles: string[] =  request['user']?.role ?? [];\r\n        const roles = this.reflector.getAllAndMerge<string[]>(ALLOW_ROLES_KEY, [context.getHandler(), context.getClass()]);\r\n        return roles.some(role => claimRoles.includes(role));\r\n    }\r\n    \r\n}"],"names":["RoleGuard","canActivate","context","request","switchToHttp","getRequest","claimRoles","role","roles","reflector","getAllAndMerge","ALLOW_ROLES_KEY","getHandler","getClass","some","includes","constructor"],"mappings":";;;;;;;eAMqBA;;;wBANqC;sBAChC;qCAEM;;;;;;;;;;AAGjB,IAAA,AAAMA,YAAN,MAAMA;IAIjBC,YAAYC,OAAyB,EAAoD;QACrF,MAAMC,UAAUD,QAAQE,YAAY,GAAGC,UAAU;QACjD,MAAMC,aAAwBH,OAAO,CAAC,OAAO,EAAEI,QAAQ,EAAE;QACzD,MAAMC,QAAQ,IAAI,CAACC,SAAS,CAACC,cAAc,CAAWC,oCAAe,EAAE;YAACT,QAAQU,UAAU;YAAIV,QAAQW,QAAQ;SAAG;QACjH,OAAOL,MAAMM,IAAI,CAACP,CAAAA,OAAQD,WAAWS,QAAQ,CAACR;IAClD;IAPAS,YAAY,AAAiBP,SAAoB,CAAE;aAAtBA,YAAAA;IAAuB;AASxD"}