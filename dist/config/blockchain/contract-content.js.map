{"version":3,"sources":["../../../src/config/blockchain/contract-content.ts"],"sourcesContent":["const CONTRACT = `\r\n    // SPDX-License-Identifier: MIT \r\n    pragma solidity ^0.8.0;\r\n\r\n\r\n    interface IERC20 {\r\n        event Transfer(address  from_, address to_, uint256 value_);\r\n        function totalSupply() external view returns(uint256);\r\n        function balanceOf(address owner_) external view returns(uint256);\r\n        function transfer(address recipient_, uint256 amount_) external returns(bool);\r\n    }\r\n\r\n    contract GLTToken is IERC20 {\r\n        \r\n        string private _name;\r\n        string private _symbol;\r\n        uint256 private _totalSupply;\r\n\r\n        mapping(address => uint256) private _balances;\r\n\r\n        mapping(string => mapping(address => bool)) private _hasVoted;\r\n\r\n        constructor(uint256 initialSupply) {\r\n            _mint(msg.sender, initialSupply);\r\n            _name = \"Gabriel Livia Token\";\r\n            _symbol = \"GLT\";\r\n        }\r\n        \r\n        modifier checkBalance(uint256 balance_, uint256 amount_) {\r\n            require(balance_ > 0 && balance_ >= amount_, \"Saldo insuficiente\");\r\n            _;\r\n        }\r\n\r\n        function _mint(address account_, uint256 amount_) internal {\r\n            _totalSupply += amount_;\r\n            _balances[account_] += amount_; \r\n            emit Transfer(address(0), account_, amount_);\r\n        }\r\n\r\n\r\n       function castVote(string memory publicConsultationId_) public returns (bool) {\r\n            require(!_hasVoted[publicConsultationId_][msg.sender], \"Voce ja votou nesta consulta\");\r\n            \r\n            _hasVoted[publicConsultationId_][msg.sender] = true;\r\n    \r\n            return true;\r\n        }\r\n\r\n\r\n        function name() public view returns(string memory) {\r\n            return _name;\r\n        }\r\n\r\n        function symbol() public view returns(string memory) {\r\n            return _symbol;\r\n        }\r\n\r\n        function totalSupply() public view override returns(uint256) {\r\n            return _totalSupply;\r\n        }\r\n\r\n        function decimals() public pure returns(uint8) {\r\n            return 18;\r\n        }\r\n\r\n        function balanceOf(address owner_) public view override returns(uint256) {\r\n            return _balances[owner_];\r\n        }\r\n\r\n        function transfer(address recipient, uint256 amount) public override returns(bool) {\r\n            _transfer(msg.sender, recipient, amount);\r\n            return true;\r\n        }\r\n\r\n        function _transfer(address sender, address recipient, uint256 amount) internal checkBalance(_balances[sender], amount) {\r\n            _balances[sender] -= amount;\r\n            _balances[recipient] += amount;\r\n            emit Transfer(sender, recipient, amount);\r\n        }\r\n    }\r\n`;\r\n\r\nexport default CONTRACT;"],"names":["CONTRACT"],"mappings":";;;;+BAkFA;;;eAAA;;;AAlFA,MAAMA,WAAW,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgFlB,CAAC;MAED,WAAeA"}